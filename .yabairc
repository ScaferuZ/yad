# initial configuration [required]
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

osascript -e 'tell application id "tracesOf.Uebersicht" to refresh'

# global settings
yabai -m config                                 \
    mouse_follows_focus          off            \
    focus_follows_mouse          off            \
    window_origin_display        default        \
    window_placement             second_child   \
    window_topmost               off            \
    window_shadow                on             \
    window_animation_duration    0.25           \
    window_opacity_duration      0.25           \
    active_window_opacity        1              \
    normal_window_opacity        1              \
    window_opacity               on             \
    insert_feedback_color        0xffd75f5f     \
    active_window_border_color   0xff775759     \
    normal_window_border_color   0xff555555     \
    window_border_width          5              \
    window_border_radius         0             \
    window_border_blur           on             \
    window_border_hidpi          on             \
    window_border                off            \
    split_ratio                  0.50           \
    split_type                   auto           \
    auto_balance                 off            \
    top_padding                  0            \
    bottom_padding               0             \
    left_padding                 0             \
    right_padding                0             \
    window_gap                   0             \
    layout                       bsp            \
    mouse_modifier               fn             \
    mouse_action1                move           \
    mouse_action2                resize         \
    mouse_drop_action            swap
#
# setup spaces
#
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 6)'); do
  yabai -m space --destroy 7
done

function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

setup_space 1 
setup_space 2 
setup_space 3 
setup_space 4 
setup_space 5 
setup_space 6 

yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app=".*" sub-layer=normal
yabai -m rule --add app="^Simulator" manage=on

echo "yabai configuration loaded.."
